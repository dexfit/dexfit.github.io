'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _dec, _class;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConfigPipe = undefined;

var _core = require('angular2/core');

var _ = require('./');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ConfigPipe = exports.ConfigPipe = (_dec = (0, _core.Pipe)({ name: 'config' }), _dec(_class = (function () {
  function ConfigPipe(configService) {
    _classCallCheck(this, ConfigPipe);

    this._configService = configService;
  }

  _createClass(ConfigPipe, [{
    key: 'transform',
    value: function transform(value) {
      return this._configService.get(value);
    }
  }]);

  return ConfigPipe;
})()) || _class);
Reflect.defineMetadata('design:paramtypes', [_.ConfigService], ConfigPipe);
//# sourceMappingURL=pipe.js.map